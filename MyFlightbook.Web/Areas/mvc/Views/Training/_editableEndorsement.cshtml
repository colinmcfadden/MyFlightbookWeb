@using System.Globalization
@using MyFlightbook.Instruction
@{
    string targetUser = ViewBag.targetUser;
    string sourceUser = ViewBag.sourceUser;
    MyFlightbook.Profile pfTargetUser = MyFlightbook.Profile.GetUser(targetUser);
    EndorsementMode mode = ViewBag.mode;
    MyFlightbook.Profile pfSourceUser = (mode == EndorsementMode.StudentPullAdHoc) ? null : MyFlightbook.Profile.GetUser(sourceUser);
    EndorsementType template = ViewBag.template;
    Endorsement source = ViewBag.source;
    Endorsement.StudentTypes studentType = ViewBag.studentType;
}
<script type="text/javascript">
    $(() => {
        $('#pnlEditEndorsement').find("input").keydown(function (e) {
            if (e.keyCode == 13) {
                $('#btnAddEndorsement')[0].click();
                return false;
            }
        });

        $("#frmEditEndorsement").validate({
            errorClass: "error",
            errorElement: "div",
            errorPlacement: function (error, element) {
                error.insertAfter($(element));
            },
            rules: {
                endorsementTitle: "required",
                instructorPass: "required",
                endorsementDate: "required",
                instructorPass: "required",
                cfiName: "required",
                cfiCert: "required",
            },
            messages: {
                endorsementTitle: "@Resources.SignOff.errTitleRequired",
                endorsementDate: {
                    max: "@Resources.SignOff.errNoPostDating",
                    required: "@Resources.SignOff.EndorsementNoDate"
                },
                instructorPass: "@Resources.SignOff.errInstructorPasswordRequiredToEndorse",
                cfiName: "@Resources.SignOff.errNoInstructor",
                cfiCert: "@Resources.SignOff.errNeedCertificate",
            },
            highlight: function (element, errorClass) {
                $(element).removeClass(errorClass);
            }
        });
    });
</script>
<div id="pnlEditEndorsement" class="endorsement endorsementEdit">
    @using (Html.BeginForm("", "Training", FormMethod.Post, new { id = "frmEditEndorsement", name = "frmEditEndorsement" }))
    {
        @Html.AntiForgeryToken()
        <input type="hidden" name="endorsementMode" value="@mode" />
        <input type="hidden" name="targetUser" value="@targetUser" />
        <input type="hidden" name="sourceUser" value="@sourceUser" />
        <input type="hidden" name="studentType" value="@studentType" />
        <input type="hidden" name="compiledBody" id="hdnCompiledBody" />
        <input type="hidden" name="endorsementFAR" value="@(source?.FARReference ?? template.FARReference)" />
        <table style="width: 100%">
            <tr>
                <td colspan="2"><input type="text" id="txtTitle" name="endorsementTitle" required style="width: 100%" placeholder="@Resources.SignOff.EndorsementTitleWatermark" value="@(source?.FullTitleAndFar ?? template.Title)" /></td>
            </tr>
            <tr>
                <td style="font-weight: bold;">@Resources.SignOff.EditEndorsementFARPrompt</td>
                <td>@(source?.FARReference ?? template.FARReference)</td>
            </tr>
            <tr>
                <td colspan="2">
                    <hr />
                    <div style="line-height: 180%">
                        <div id="templateBody">
                            @Html.Raw(EndorsementType.RenderBody(template, false, pfTargetUser))
                        </div>
                        <script type="text/javascript">
                            $(() => {
                                $("textarea[name='@EndorsementType.FreeFormTextControlName']").val("@(source?.EndorsementText ?? string.Empty)");
                            });
                        </script>
                    </div>
                    <hr />
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold;">@Resources.SignOff.EditEndorsementDatePrompt</td>
                <td><input type="date" required name="endorsementDate" value="@DateTime.Now.YMDString()" max="@DateTime.Now.AddDays(1).YMDString()" /></td>
            </tr>
            <tr>
                <td style="font-weight: bold;">@Resources.SignOff.EditEndorsementStudentPrompt</td>
                <td>
                    @if (studentType == Endorsement.StudentTypes.Member)
                    {
                        <input type="hidden" name="studentName" value="@pfTargetUser.UserName" />
                        @pfTargetUser.UserFullName
                    }
                    else
                    {
                        <input type="text" required name="studentName" placeholder="@Resources.SignOff.EditEndorsementStudentNamePrompt" />
                    }
                </td>
            </tr>
            <tr style="@(mode == EndorsementMode.StudentPullAuthenticated ? string.Empty : "display: none;")">
                <td style="font-weight: bold">@String.Format(CultureInfo.CurrentCulture, Resources.SignOff.SignReEnterPassword, pfSourceUser?.UserFullName ?? string.Empty)</td>
                <td><input type="password" name="instructorPass" required /></td>
            </tr>
            <tr>
                <td style="font-weight:bold;">@Resources.SignOff.EditEndorsementInstructorPrompt</td>
                <td>
                    @if (mode == EndorsementMode.StudentPullAdHoc)
                    {
                        <input type="text" required name="cfiName" value="@(pfSourceUser?.UserFullName ?? Request["cfiName"] ?? string.Empty)" />
                    }
                    else
                    {
                        <input type="hidden" name="cfiName" value="@pfSourceUser.UserFullName" />
                        @pfSourceUser.UserFullName
                    }
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold">@Resources.SignOff.EditEndorsementCFIPrompt</td>
                <td>
                    @if (mode == EndorsementMode.StudentPullAdHoc)
                    {
                    <input type="text" required name="cfiCert" value="@(pfSourceUser?.Certificate ?? Request["cfiCert"] ?? string.Empty)" />
                    }
                    else
                    {
                        <input type="hidden" name="cfiCert" value="@pfSourceUser.Certificate" />
                        @pfSourceUser.Certificate
                    }
                </td>
            </tr>
            <tr>
                <td style="font-weight: bold;">@Resources.SignOff.EditEndorsementExpirationPrompt</td>
                <td>
                    @if (mode == EndorsementMode.StudentPullAdHoc)
                    {
                        <input type="date" name="cfiCertExpiration" value="@(pfSourceUser?.CertificateExpiration.YMDString() ?? (DateTime.TryParse(Request["cfiExpiration"] ?? string.Empty, CultureInfo.CurrentCulture, DateTimeStyles.None, out DateTime dtExp) ? dtExp.YMDString() : string.Empty))" />
                    }
                    else
                    {
                        <input type="hidden" name="cfiCertExpiration" value="@(pfSourceUser.CertificateExpiration.HasValue() ? pfSourceUser.CertificateExpiration.YMDString() : string.Empty)" />
                        @(pfSourceUser.CertificateExpiration.HasValue() ? pfSourceUser.CertificateExpiration.ToShortDateString() : string.Empty)
                    }
                </td>
            </tr>
        </table>
        <div id="rowScribble" style="display: @(mode == EndorsementMode.StudentPullAdHoc ? "block" : "none" )">
            <div style="font-weight: bold">@Resources.SignOff.SignFlightAffirmation</div>
            <div id="newScribble" style="display:inline-block;">
                @{ Html.RenderAction("RenderScribble", "Training", new { colorRef = "#0000ff" }); }
            </div>
        </div>
        <div style="text-align:right;">
            <button type="button" id="btnAddEndorsement" onclick="javascript: submitEndorsement();">@Resources.SignOff.EditEndorsementAddEndorsement</button>
        </div>
    }
</div>
