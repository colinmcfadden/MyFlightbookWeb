@using MyFlightbook.Achievements
@using System.Globalization
@model MyFlightbook.Achievements.AirportListBadgeData
@{
    ViewBag.Title = "Admin Tools - Achievements";
    Layout = "~/Areas/mvc/Views/Shared/_Layout.cshtml";
    ViewBag.defaultTab = tabID.tabAdmin;
}
<script type="text/javascript">
    function invalidateAchievements() {
        var params = new Object();
        var d = JSON.stringify(params);
        $.ajax({
            url: '@Url.Action("InvalidateBadgeCache", "Admin")',
            type: "POST", data: d, dataType: "text", contentType: "application/json",
            error: function (xhr, status, error) {
                window.alert(xhr.responseText);
            },
            complete: function (response) { },
            success: function (response) {
                window.alert(response);
            }
        });
    }

    function editExisting(id, name, airports, overlay, fBinary, bronze, silver, gold, platinum) {
        $("#btnAddAirportAchievement")[0].innerHTML = "Update";
        $("#ckBinary")[0].checked = fBinary;
        $("#hdnAchievementID")[0].value = id;
        $("#divAchievementForm").find('input[name="Name"]').val(name);
        $("#divAchievementForm").find('input[name="AirportsRaw"]').val(airports);
        $("#divAchievementForm").find('input[name="overlay"]').val(overlay);
        $("#decBronze")[0].value = bronze;
        $("#decSilver")[0].value = silver;
        $("#decGold")[0].value = gold;
        $("#decPlatinum")[0].value = platinum;
        showModalById("divAchievementForm", "Edit existing Achievement " + id, 500);
        $("#divAchievementForm").find('input[name="Name"]')[0].focus();
    }

    function addNew() {
        $("#btnAddAirportAchievement")[0].innerHTML = "Add";
        $("#divAchievementForm").find("input").val("");
        $("#ckBinary")[0].checked = false;
        $("#ckBinary")[0].value = "true";
        $("#hdnAchievementID")[0].value = "0";
        showModalById("divAchievementForm", "Add new Achievement", 500);
        $("#divAchievementForm").find('input[name="Name"]')[0].focus();
    }
</script>
<div>
    <button type="button" onclick="javascript: invalidateAchievements();">Invalidate Badge Cache</button>
    (if any badge criteria changes, use this to set everybody to &quot;needs computed&quot;)
</div>
<h2>Airport-list achievements:</h2>

<div style="display: none;" id="divAchievementForm">
    @using (Html.BeginForm("Achievements", "Admin", FormMethod.Post))
    {
    <input type="hidden" id="hdnAchievementID" name="id" value="" />
    <table style="width: 400px">
        <tr>
            <td style="vertical-align: top; font-weight: bold;">Title</td>
            <td>
                @Html.EditorFor(bd => bd.Name, new { htmlAttributes = new { @style = "width: 300px;" } })
                @Html.ValidationMessageFor(bd => bd.Name, "Name is required", new { @class = "error" }, "div")
            </td>
        </tr>
        <tr>
            <td style="vertical-align: top; font-weight: bold;">Binary (all or nothing)?</td>
            <td><input type="checkbox" name="fBinary" id="ckBinary" value="true" /></td>
        </tr>
        <tr>
            <td style="vertical-align: top; font-weight: bold;">Bronze Level:</td>
            <td><input type="number" id="decBronze" name="bronze" min="0" step="1" /></td>
        </tr>
        <tr>
            <td style="vertical-align: top; font-weight: bold;">Silver Level:</td>
            <td><input type="number" id="decSilver" name="silver" min="0" step="1" /></td>
        </tr>
        <tr>
            <td style="vertical-align: top; font-weight: bold;">Gold Level:</td>
            <td><input type="number" id="decGold" name="gold" min="0" step="1" /></td>
        </tr>
        <tr>
            <td style="vertical-align: top; font-weight: bold;">Platinum Level:</td>
            <td><input type="number" id="decPlatinum" name="platinum" min="0" step="1" /></td>
        </tr>
        <tr>
            <td style="vertical-align: top; font-weight: bold;">Overlay</td>
            <td><input type="text" id="txtOverlay" name="overlay" /></td>
        </tr>
        <tr>
            <td style="vertical-align: top; font-weight: bold;">Airport Codes</td>
            <td>
                @Html.EditorFor(bd => bd.AirportsRaw, new { htmlAttributes = new { @style = "width: 300px;" } })
                @Html.ValidationMessageFor(bd => bd.AirportsRaw, "Airport list is required", new { @class = "error" }, "div")
            </td>
        </tr>
    </table>
    <button onclick="javascript:$('#divAchievementForm').dialog('close');" type="button">Cancel</button> <button id="btnAddAirportAchievement" type="submit"></button>
    }
</div>
<div><button type="button" onclick="javascript: addNew();">Add new...</button></div>

<table class="stickyHeaderTable stickyHeaderAlternate">
    @foreach (AirportListBadgeData bd in ViewBag.airportBadges)
    {
        <tr style="vertical-align:top;">
            <td>
                <a style="cursor:pointer;" onclick="javascript: editExisting(@((int) bd.ID), '@bd.Name', '@bd.AirportsRaw', '@bd.OverlayName', @Json.Encode(bd.BinaryOnly), @bd.Levels[0], @bd.Levels[1], @bd.Levels[2], @bd.Levels[3]);">Edit</a>
            </td>
            <td>
                @if (!String.IsNullOrEmpty(bd.OverlayName))
                {
                    <img src="@VirtualPathUtility.ToAbsolute(String.Format(CultureInfo.InvariantCulture, "~/images/BadgeOverlays/{0}", bd.OverlayName))" />
                }
            </td>
            <td>
                <div><span style="font-weight:bold">@((int) bd.ID)</span> - @bd.Name</div>
                <div><a target="_blank" href="@VirtualPathUtility.ToAbsolute(String.Format(CultureInfo.InvariantCulture, "~/mvc/Airport/MapRoute?Airports={0}", HttpUtility.UrlEncode(bd.AirportsRaw)))">@bd.AirportsRaw</a></div>
                <div>@(bd.BinaryOnly ? "Binary Only" : String.Format(CultureInfo.CurrentCulture, "{0}, {1}, {2}, {3}", bd.Levels[0], bd.Levels[1], bd.Levels[2], bd.Levels[3]))</div>
            </td>
        </tr>
    }

</table>
