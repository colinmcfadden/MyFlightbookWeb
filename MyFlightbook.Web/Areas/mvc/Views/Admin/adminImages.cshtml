@using MyFlightbook.Image
@{
    ViewBag.Title = "Admin Tools - Images";
    Layout = "~/Areas/mvc/Views/Shared/_Layout.cshtml";
    ViewBag.defaultTab = tabID.tabAdmin;
}
<script type="text/javascript">
    function updateSlowOperationStatus(key, timerID) {
        var params = new Object();
        params.key = key;
        var d = JSON.stringify(params);
        $.ajax({
            url: '@Url.Action("SlowImageOpStatus", "Admin")',
            type: "POST", data: d, dataType: "text", contentType: "application/json",
            error: function (xhr, status, error) {
                window.alert(xhr.responseText);
            },
            complete: function (response) { },
            success: function (response) {
                if (response == '') {
                    clearInterval(timerID);
                    $("#divMigrateProgress").hide();
                    $("#divSyncResultsStatus").append("\r\nCompleted!");
                } else {
                    $("#divSyncResultsStatus").text(response);
                }
            }
        });
    }

    function deleteOrphans() {
        $("#divMigrateProgress").show();
        var params = new Object();
        var d = JSON.stringify(params);
        $.ajax({
            url: '@Url.Action("DeleteOrphans", "Admin")',
            type: "POST", data: d, dataType: "text", contentType: "application/json",
            error: function (xhr, status, error) { window.alert(xhr.responseText); },
            complete: function (response) { },
            success: function (response) {
                var timerID = setInterval(() => {
                    updateSlowOperationStatus(response, timerID);
                }, 5000);
            }
        });
    }

    function deleteDEBUGImages() {
        $("#divMigrateProgress").show();
        var params = new Object();
        var d = JSON.stringify(params);
        $.ajax({
            url: '@Url.Action("DeleteDebugS3Images", "Admin")',
            type: "POST", data: d, dataType: "text", contentType: "application/json",
            error: function (xhr, status, error) { window.alert(xhr.responseText); },
            complete: function (response) { },
            success: function (response) {
                var timerID = setInterval(() => {
                    updateSlowOperationStatus(response, timerID);
                }, 5000);
            }
        });
    }

    function syncImages(imageClass) {
        $("#divMigrateProgress").show();
        var params = new Object();
        params.fPreviewOnly = $("#ckPreviewOnly")[0].checked;
        params.ic = imageClass;
        var d = JSON.stringify(params);
        $.ajax({
            url: '@Url.Action("SyncImages", "Admin")',
            type: "POST", data: d, dataType: "text", contentType: "application/json",
            error: function (xhr, status, error) { window.alert(xhr.responseText); },
            complete: function (response) { },
            success: function (response) {
                var timerID = setInterval(() => {
                    updateSlowOperationStatus(response, timerID);
                }, 5000);
            }
        });
    }

    function deleteS3Orphans(imageClass) {
        $("#divMigrateProgress").show();
        var params = new Object();
        params.fPreviewOnly = $("#ckPreviewOnly")[0].checked;
        params.ic = imageClass;
        var d = JSON.stringify(params);
        $.ajax({
            url: '@Url.Action("DeleteS3Orphans", "Admin")',
            type: "POST", data: d, dataType: "text", contentType: "application/json",
            error: function (xhr, status, error) { window.alert(xhr.responseText); },
            complete: function (response) { },
            success: function (response) {
                var timerID = setInterval(() => {
                    updateSlowOperationStatus(response, timerID);
                }, 5000);
            }
        });
    }

    function updateBrokenImage(sender) {
        var parentRow = $(sender).parents("tr");
        var params = new Object();
        params.ic = parentRow.find("[name='virtPath']").text();
        params.key = parentRow.find("[name='imageKey']").text();
        params.thumbName = parentRow.find("[name='thumbName']").text();
        params.width = parentRow.find("[name='txtWidth']").val();
        params.height = parentRow.find("[name='txtHeight']").val();
        var d = JSON.stringify(params);
        $.ajax({
            url: '@Url.Action("UpdateBrokenImage", "Admin")',
            type: "POST", data: d, dataType: "text", contentType: "application/json",
            error: function (xhr, status, error) { window.alert(xhr.responseText); },
            complete: function (response) { },
            success: function (response) {
                parentRow.toggle();
            }
        });
    }

    function processPendingVideos() {
        var params = new Object();
        var d = JSON.stringify(params);
        $.ajax({
            url: '@Url.Action("ProcessPendingVideos", "Admin")',
            type: "POST", data: d, dataType: "text", contentType: "application/json",
            error: function (xhr, status, error) { window.alert(xhr.responseText); },
            complete: function (response) { },
            success: function (response) {
                window.alert(response);
            }
        });
    }
</script>
<h2>Images</h2>
<p>
    <button type="button" onclick="javascript: deleteOrphans()">Delete Orphans</button> <span id="lblDeleted"></span>
    @if (AWSConfiguration.UseDebugBucket)
    {
    <button type="button" onclick="javascript: deleteDEBUGImages(true)">Delete DEBUG S3 Images</button>
    }
</p>
<table>
    <tr>
        <td><a href="images/Flight" target="_blank">Review Flight Images</a></td>
        <td><button type="button" onclick="javascript: syncImages('Flight');">Sync Flight Images to DB</button></td>
        <td><button type="button" onclick="javascript: deleteS3Orphans('Flight')">Delete Orphan S3 Images</button></td>
    </tr>
    <tr>
        <td><a href="images/Aircraft" target="_blank">Review Aircraft Images</a></td>
        <td><button type="button" onclick="javascript: syncImages('Aircraft');">Sync Aircraft Images to DB</button></td>
        <td><button type="button" onclick="javascript: deleteS3Orphans('Aircraft')">Delete Orphan S3 Images</button></td>
    </tr>
    <tr>
        <td><a href="images/Endorsement" target="_blank">Review Endorsements</a></td>
        <td><button type="button" onclick="javascript: syncImages('Endorsement');">Sync Endorsement Images to DB</button></td>
        <td><button type="button" onclick="javascript: deleteS3Orphans('Endorsement')">Delete Orphan S3 Images</button></td>
    </tr>
    <tr>
        <td><a href="images/OfflineEndorsement" target="_blank">Review Offline Endorsements</a></td>
        <td><button type="button" onclick="javascript: syncImages('OfflineEndorsement');">Sync Offline Endorsements to DB</button></td>
        <td><button type="button" onclick="javascript: deleteS3Orphans('OfflineEndorsement')">Delete Orphan S3 Images</button></td>
    </tr>
    <tr>
        <td><a href="images/BasicMed" target="_blank">Review BasicMed</a></td>
        <td><button type="button" onclick="javascript: syncImages('BasicMed');">Sync BasicMed Images to DB</button></td>
        <td><button type="button" onclick="javascript: deleteS3Orphans('BasicMed')">Delete Orphan S3 Images</button></td>
    </tr>
</table>
<div><input type="checkbox" id="ckPreviewOnly" /><label for="ckPreviewOnly">Preview Only (no changes made)</label></div>
<div style="display:none" id="divMigrateProgress"><img src="@VirtualPathUtility.ToAbsolute("~/images/progress.gif")" /></div>
<div id="divSyncResultsStatus" style="white-space:pre">

</div>
<h3>Images to fix:</h3>
@if (ViewBag.brokenImages.Count == 0)
{
    <p class="success">(No problematic images found)</p>
}
else
{
<table class="stickyHeaderTable">
    <thead>
        <tr>
            <th class="headerBase gvhDefault"></th>
            <th class="headerBase gvhDefault"></th>
            <th class="headerBase gvhDefault">Virt. Path ID</th>
            <th class="headerBase gvhDefault">Image Key</th>
                <th class="headerBase gvhDefault">Thumbnail</th>
            <th class="headerBase gvhDefault">Image Type</th>
            <th class="headerBase gvhDefault">Thumb Width</th>
            <th class="headerBase gvhDefault">Thumb Height</th>
            <th class="headerBase gvhDefault">Comment</th>
            <th class="headerBase gvhDefault">Latitude</th>
            <th class="headerBase gvhDefault">Longitude</th>
            <th class="headerBase gvhDefault">IsLocal</th>
        </tr>
    </thead>
    <tbody>
        @foreach (MFBImageInfoBase mfbii in ViewBag.brokenImages)
        {
            <tr>
                <td><a style="cursor:pointer" onclick="javascript: updateBrokenImage(this);">Update</a></td>
                <td><a href="@mfbii.URLFullImage" target="_blank"><img src="@mfbii.URLThumbnail" /></a></td>
                <td name="virtPath">@mfbii.Class.ToString()</td>
                <td name="imageKey">@mfbii.Key</td>
                <td name="thumbName">@mfbii.ThumbnailFile</td>
                <td>@mfbii.ImageType.ToString()</td>
                <td><input type="number" step="1" name="txtWidth" value="@mfbii.WidthThumbnail" /></td>
                <td><input type="number" step="1" name="txtHeight" value="@mfbii.HeightThumbnail" /></td>
                <td>@mfbii.Comment</td>
                <td>@((mfbii.Location?.Latitude ?? 0.0).ToString())</td>
                <td>@((mfbii.Location?.Longitude ?? 0.0).ToString())</td>
                <td>@(mfbii.IsLocal ? "LOCAL" : string.Empty)</td>
            </tr>
        }
    </tbody>
</table>
}
<h2>Videos</h2>
<p>
    <button type="button" onclick="javascript: processPendingVideos();">Process Incomplete Pending Videos</button>
    <span id="lblPVResults"></span>
</p>
