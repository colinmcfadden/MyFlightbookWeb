<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="errBuiltInAirport" xml:space="preserve">
    <value>Airport '{0}' is built-in and cannot be edited.</value>
  </data>
  <data name="errCodeTooLong" xml:space="preserve">
    <value>Facility code '{0}' too long</value>
  </data>
  <data name="errCodeTooShort" xml:space="preserve">
    <value>Facility code '{0}' is too short</value>
  </data>
  <data name="errConflict" xml:space="preserve">
    <value>An airport/heliport/seaport with the id '{0}' already exists.</value>
  </data>
  <data name="errConflictNavaid" xml:space="preserve">
    <value>A navaid with the identifier '{0}' already exists.</value>
  </data>
  <data name="errEmptyName" xml:space="preserve">
    <value>Facility name is empty; please provide a name.</value>
  </data>
  <data name="errIllegalCharacters" xml:space="preserve">
    <value>Facility code has unallowed characters</value>
  </data>
  <data name="errInvalidLatitude" xml:space="preserve">
    <value>Latitude must be between -90 and 90</value>
  </data>
  <data name="errInvalidLatLong" xml:space="preserve">
    <value>Please type valid numbers for latitude/longitude.</value>
  </data>
  <data name="errInvalidLongitude" xml:space="preserve">
    <value>Longitude must be between -180 and 180</value>
  </data>
  <data name="errNotKnownType" xml:space="preserve">
    <value>'{0}' is not a known type of airport or navaid.</value>
  </data>
  <data name="errNotYourAirport" xml:space="preserve">
    <value>Airport '{0}' was created by another user; you cannot edit it.</value>
  </data>
  <data name="wmAirportCode" xml:space="preserve">
    <value>Identifier/Code</value>
    <comment>Watermark for airport identifier (e.g., LHR for London Heathrow)</comment>
  </data>
  <data name="wmFriendlyName" xml:space="preserve">
    <value>Name</value>
    <comment>Watermark for Friendly name for an airport (e.g., "London Heathrow" vs. "LHR")</comment>
  </data>
  <data name="airportGameTitle" xml:space="preserve">
    <value>Airport Identification Game</value>
  </data>
  <data name="MapPrompt" xml:space="preserve">
    <value>Planning a flight? Enter the airport codes below.  You can also get METARs for individual airports.</value>
  </data>
  <data name="MapRouteHeader" xml:space="preserve">
    <value>%APP_NAME% - Map a route</value>
  </data>
  <data name="MapUpdateMap" xml:space="preserve">
    <value>Map these airports</value>
  </data>
  <data name="MapZoomOut" xml:space="preserve">
    <value>Zoom to fit entire route.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="MapNavaidTip" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>content.en\mapnavaidtip.htm;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="vistedAirportsCountTip" xml:space="preserve">
    <value>Visit count is approximate; departure airports are ignored unless they are the only airport listed for a flight or have never been used on other flights</value>
  </data>
  <data name="errTBDIsInvalidCode" xml:space="preserve">
    <value>TBD is not a valid airport code - it means "To Be Determined!"</value>
  </data>
  <data name="DownloadKML" xml:space="preserve">
    <value>View in Google Earth</value>
  </data>
  <data name="DownloadVisited" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="EstimateDistance" xml:space="preserve">
    <value>Estimate Total Distance</value>
  </data>
  <data name="WarningSlow" xml:space="preserve">
    <value>(Slow - only click once)</value>
  </data>
  <data name="mapShowAirports" xml:space="preserve">
    <value>Airports</value>
  </data>
  <data name="mapShowImages" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="mapShowPath" xml:space="preserve">
    <value>Path of flight (as flown)</value>
  </data>
  <data name="mapShowRoute" xml:space="preserve">
    <value>Route of flight (airport-to-airport)</value>
  </data>
  <data name="errNoAirportsFound" xml:space="preserve">
    <value>No airports found</value>
  </data>
  <data name="airportCode" xml:space="preserve">
    <value>Facility</value>
  </data>
  <data name="airportEarliestVisit" xml:space="preserve">
    <value>Date of first visit</value>
  </data>
  <data name="airportLatestVisit" xml:space="preserve">
    <value>Date of last visit</value>
  </data>
  <data name="airportLatitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="airportLongitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="airportName" xml:space="preserve">
    <value>Facility Name</value>
  </data>
  <data name="airportType" xml:space="preserve">
    <value>Facility Type</value>
  </data>
  <data name="airportViewFlights" xml:space="preserve">
    <value>View flights</value>
  </data>
  <data name="airportVisitedAirportsNote" xml:space="preserve">
    <value>you may have visited more airports than this; this is only the count of distinct 3- or 4-letter codes within the 'Route' field of flights in your account.</value>
  </data>
  <data name="airportVisits" xml:space="preserve">
    <value>Visits</value>
  </data>
  <data name="MapZoomAllAirports" xml:space="preserve">
    <value>Zoom to fit all airports</value>
  </data>
  <data name="visitedAirportComputing" xml:space="preserve">
    <value>Computing...</value>
  </data>
  <data name="visitedAirportTitle" xml:space="preserve">
    <value>Visited Airports</value>
  </data>
  <data name="EditAirportsTitle" xml:space="preserve">
    <value>Edit Airports and Navigation Aids</value>
  </data>
  <data name="airportCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="airportCountryDisclaimer" xml:space="preserve">
    <value>Country here is distinct from Nations - %APP_NAME% makes no statement about political boundaries.  E.g., in the taxonomy here, Greenland is distinct from Denmark, even though it is governed by Denmark.</value>
  </data>
  <data name="airportRegion" xml:space="preserve">
    <value>State/Province/Region</value>
  </data>
  <data name="ViewRegions" xml:space="preserve">
    <value>Countries/Regions</value>
  </data>
  <data name="ViewRegionsNone" xml:space="preserve">
    <value>(No countries/regions detected)</value>
  </data>
  <data name="airportCountryWithDisclaimer" xml:space="preserve">
    <value>Country*</value>
  </data>
  <data name="errDupeAirport" xml:space="preserve">
    <value>The airport you are creating looks like it may be a duplicate of one of the following.  This is OK, but if there is an "official" code, then you should probably use that to avoid your code conflicting in the future:</value>
  </data>
  <data name="errDupeAirportCreateAnyway" xml:space="preserve">
    <value>Create it anyway</value>
  </data>
  <data name="errEmptyLatLong" xml:space="preserve">
    <value>Please provide a latitude/longitude</value>
  </data>
  <data name="airportNameShort" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EditAirportAddFacility" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="EditAirportFacilityType" xml:space="preserve">
    <value>Facility Type</value>
  </data>
  <data name="EditAirportMapTip" xml:space="preserve">
    <value>Click on the map to fill in the latitude/longitude</value>
  </data>
  <data name="EditAirportSampleCode" xml:space="preserve">
    <value>e.g., "KABC"</value>
  </data>
  <data name="EditAirportSampleName" xml:space="preserve">
    <value>e.g., "Anytown Municipal Airport"</value>
  </data>
  <data name="EditAirportsCodePrompt" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="EditAirportsDeleteAirport" xml:space="preserve">
    <value>Delete this airport</value>
  </data>
  <data name="EditAirportsDescription" xml:space="preserve">
    <value>Missing a local airport that you love? That's probably because we compile our data from a variety of public (and free!) sources, but these are not exhaustive. You can help keep the dataset complete by adding your own below.</value>
  </data>
  <data name="EditAirportsMyAirportsHeader" xml:space="preserve">
    <value>Airports or navaids you have created are shown below. To edit an airport or navaid you have created, simply recreate it, re-using the facility code.</value>
  </data>
  <data name="EditAirportTipHeader" xml:space="preserve">
    <value>Tip</value>
  </data>
  <data name="errInvalidCodeLength" xml:space="preserve">
    <value>Code must be 2-5 characters in length (3-6 for airports)</value>
  </data>
  <data name="errLatitudeMissing" xml:space="preserve">
    <value>Please provide a latitude, either by typing or clicking on the map</value>
  </data>
  <data name="errLongitudeMissing" xml:space="preserve">
    <value>Please provide a longitude either by typing or clicking on the map</value>
  </data>
  <data name="errMissingCode" xml:space="preserve">
    <value>You must supply a valid code between 2-6 characters long</value>
  </data>
  <data name="errMissingFacilityName" xml:space="preserve">
    <value>Please provide a name for the facility</value>
  </data>
  <data name="MapConnectDots" xml:space="preserve">
    <value>Show Routes</value>
  </data>
  <data name="viewCountryAdminMap" xml:space="preserve">
    <value>View a colored map of visited countries/regions/sub-regions</value>
  </data>
  <data name="viewCountryAdminMapAdmin1" xml:space="preserve">
    <value>Subregions/States/Provinces:</value>
  </data>
  <data name="viewCountryAdminMapAirports" xml:space="preserve">
    <value>Airports</value>
  </data>
  <data name="viewCountryAdminMapTopLevel" xml:space="preserve">
    <value>Countries/Regions:</value>
  </data>
  <data name="FindAirportHeader" xml:space="preserve">
    <value>Find an airport by name or code</value>
  </data>
  <data name="FindAirportPrompt" xml:space="preserve">
    <value>Can't remember an airport's code?  Search for it below</value>
  </data>
  <data name="mapOptimizeRoute" xml:space="preserve">
    <value>Optimize Route</value>
  </data>
  <data name="mapPermalink" xml:space="preserve">
    <value>Save a link to this map</value>
  </data>
  <data name="airportDistanceNote" xml:space="preserve">
    <value>Estimate is based on airport-to-airport distance in the route of your flight or telemetry, if present.</value>
  </data>
  <data name="confirmDeleteAirport" xml:space="preserve">
    <value>Are you sure you want to delete this airport/navaid?  This action cannot be undone!</value>
  </data>
  <data name="errDuplicateAirportTitle" xml:space="preserve">
    <value>Possible Duplicate</value>
  </data>
</root>